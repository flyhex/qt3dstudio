/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt 3D Studio.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype Studio3D
    \inqmlmodule QtStudio3D
    \brief Qt 3D Studio presentation viewer.

    This type enables developers to embed Qt 3D Studio presentations in Qt Quick.

    \section2 Example usage

    \qml
    Studio3D {
        id: studio3D
        Presentation {
            source: "qrc:///presentation.uia"
            SceneElement {
                id: scene
                elementPath: "Scene"
                currentSlideIndex: 2
            }
            Element {
                id: textLabel
                elementPath: "Scene.Layer.myLabel"
            }
        }
        ViewerSettings {
            showRenderStats: true
        }
        onRunningChanged: {
            console.log("Presentation ready!");
        }
    }
    \endqml
*/

/*!
    \qmlproperty bool Studio3D::running

    The value of this property is \c true when the viewer has been initialized and the presentation
    is running.

    This property is read-only.
*/

/*!
    \qmlproperty Presentation Studio3D::presentation

    Accessor for the presentation.

    This property is read-only.
*/

/*!
    \qmlproperty ViewerSettings Studio3D::viewerSettings

    Accessor for the viewer settings.

    This property is read-only.
*/

/*!
    \qmlsignal Studio3D::frameUpdate()

    This signal is emitted each time a frame has been updated regardless of visibility.
    This allows a hidden Studio3D element to still process information every frame, even though
    the renderer is not rendering.

    The corresponding handler is \c onFrameUpdate.

    To prevent expensive handlers from being processed when hidden, add an early return to
    the top like:

    \qml
         onFrameUpdate: {
             if (!visible) return;
             ...
         }
    \endqml
*/
